System Design:-
    Application Development:-
            1.Requirement Gathering
            2.Scope
            3.MVP(Minimal Viable Product)
            4.Software development
    Web Crawler:-
         Software that crawls through data of each website and provide the data
         Uses Depth First Search Algorithm
    Google Search:
        Download all content of all the websites
        Storage: 1.87 Billion Web pages=>100*2B=200B
        size of one web page=100KB
        Total Size=100*2B=100*10^3*200B=2B*10^7 Bytes
        Total size=~20PetaBytes
        Required around 20000 machines of 1TB

        Parameters to consider for any project:
            -Requirement gathering
            -Scoping
            -Estimation of data
                compute
                storage
                network
            -Breaking the bigger problems into smaller
            -Implementation of each component
            -Testing
            -Deployment

        Low Level Design:-
            -Object Orientated principles
            -Design Principles(SOLID)
            -GOF Design Patterns

        Object Orientated Programming:-
            Object:- State + Behaviour(Instance of classes)
            Class :- Template + Blueprint Eg:-Class Person

        Encapsulation:-
            Binding state and behaviour together.
            Hiding the inner implementation of business access specifier using setters and getters

        Inheritance:-
            Extending from the parent class
            Extends class
            implement the interface
            super is used to invoke parent methods
    What is a Deadlock?
        A deadlock is a situation in concurrent programming where two or more threads are blocked indefinitely because they are each waiting for resources held by the other(s). In other words, each thread is waiting for a lock that another thread holds, creating a cycle of dependencies that can't be resolved.

        A classic example of a deadlock occurs when two threads have acquired partial locks and then try to acquire locks that the other thread holds. If each thread is waiting on the other to release the lock, neither thread will be able to proceed, and the system will be in a deadlock state.

        Conditions for Deadlock
            There are four necessary conditions for a deadlock to occur, often referred to as the Coffman conditions:

        Mutual Exclusion: At least one resource is held in a non-shareable mode, meaning only one thread can use the resource at any given time.
        Hold and Wait: A thread holding at least one resource is waiting to acquire additional resources that are currently being held by other threads.
        No Preemption: Resources cannot be forcibly taken from threads holding them; they must be released voluntarily.
        Circular Wait: A set of threads are waiting for each other in a circular chain. For example, thread A waits for thread B to release resource 2, thread B waits for thread C to release resource 3, and thread C waits for thread A to release resource 1.







